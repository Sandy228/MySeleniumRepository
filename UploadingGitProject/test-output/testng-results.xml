<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="2" ignored="0" total="4" passed="2">
  <reporter-output>
  </reporter-output>
  <suite name="Suite A" duration-ms="816" started-at="2021-02-28T17:48:10 IST" finished-at="2021-02-28T17:48:11 IST">
    <groups>
    </groups>
    <test name="TestA" duration-ms="703" started-at="2021-02-28T17:48:10 IST" finished-at="2021-02-28T17:48:11 IST">
      <class name="suiteA.TestA">
        <test-method status="PASS" signature="inIt(org.testng.ITestResult)[pri:0, instance:suiteA.TestA@305fd85d]" name="inIt" is-config="true" duration-ms="158" started-at="2021-02-28T17:48:10 IST" finished-at="2021-02-28T17:48:10 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=TestA.testA(java.lang.String, java.lang.String)[pri:0, instance:suiteA.TestA@305fd85d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- inIt -->
        <test-method status="PASS" signature="testA(java.lang.String, java.lang.String)[pri:0, instance:suiteA.TestA@305fd85d]" name="testA" duration-ms="9" started-at="2021-02-28T17:48:10 IST" data-provider="dataTestSuiteA" finished-at="2021-02-28T17:48:10 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[Sandeep]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Newalkar]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testA -->
        <test-method status="PASS" signature="quite()[pri:0, instance:suiteA.TestA@305fd85d]" name="quite" is-config="true" duration-ms="450" started-at="2021-02-28T17:48:10 IST" finished-at="2021-02-28T17:48:11 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quite -->
        <test-method status="PASS" signature="quite()[pri:0, instance:suiteA.TestA@305fd85d]" name="quite" is-config="true" duration-ms="15" started-at="2021-02-28T17:48:11 IST" finished-at="2021-02-28T17:48:11 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quite -->
        <test-method status="PASS" signature="inIt(org.testng.ITestResult)[pri:0, instance:suiteA.TestA@305fd85d]" name="inIt" is-config="true" duration-ms="0" started-at="2021-02-28T17:48:11 IST" finished-at="2021-02-28T17:48:11 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=TestA.testA(java.lang.String, java.lang.String)[pri:0, instance:suiteA.TestA@305fd85d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- inIt -->
        <test-method status="PASS" signature="testA(java.lang.String, java.lang.String)[pri:0, instance:suiteA.TestA@305fd85d]" name="testA" duration-ms="0" started-at="2021-02-28T17:48:11 IST" data-provider="dataTestSuiteA" finished-at="2021-02-28T17:48:11 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[Mukesh]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Saini]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testA -->
      </class> <!-- suiteA.TestA -->
    </test> <!-- TestA -->
    <test name="TestAA" duration-ms="71" started-at="2021-02-28T17:48:11 IST" finished-at="2021-02-28T17:48:11 IST">
      <class name="suiteA.TestAA">
        <test-method status="PASS" signature="inIt(org.testng.ITestResult)[pri:0, instance:suiteA.TestAA@c46bcd4]" name="inIt" is-config="true" duration-ms="0" started-at="2021-02-28T17:48:11 IST" finished-at="2021-02-28T17:48:11 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=TestAA.testAA(java.lang.String, java.lang.String)[pri:0, instance:suiteA.TestAA@c46bcd4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- inIt -->
        <test-method status="FAIL" signature="testAA(java.lang.String, java.lang.String)[pri:0, instance:suiteA.TestAA@c46bcd4]" name="testAA" duration-ms="10" started-at="2021-02-28T17:48:11 IST" data-provider="dataTestSuiteA" finished-at="2021-02-28T17:48:11 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[Pradeep]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Bhandaroo]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
Title do not match,
expected [Title] but found [Title1],
Text do not match,
expected [Text] but found [Text1],
Booking ID do not match and its a criticle failure]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
Title do not match,
expected [Title] but found [Title1],
Text do not match,
expected [Text] but found [Text1],
Booking ID do not match and its a criticle failure
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:47)
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:31)
at testbase.TestBase.hardFailure(TestBase.java:67)
at suiteA.TestAA.testAA(TestAA.java:37)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1249)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAA -->
        <test-method status="PASS" signature="quite()[pri:0, instance:suiteA.TestAA@c46bcd4]" name="quite" is-config="true" duration-ms="24" started-at="2021-02-28T17:48:11 IST" finished-at="2021-02-28T17:48:11 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quite -->
        <test-method status="PASS" signature="inIt(org.testng.ITestResult)[pri:0, instance:suiteA.TestAA@c46bcd4]" name="inIt" is-config="true" duration-ms="0" started-at="2021-02-28T17:48:11 IST" finished-at="2021-02-28T17:48:11 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=TestAA.testAA(java.lang.String, java.lang.String)[pri:0, instance:suiteA.TestAA@c46bcd4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- inIt -->
        <test-method status="FAIL" signature="testAA(java.lang.String, java.lang.String)[pri:0, instance:suiteA.TestAA@c46bcd4]" name="testAA" duration-ms="8" started-at="2021-02-28T17:48:11 IST" data-provider="dataTestSuiteA" finished-at="2021-02-28T17:48:11 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[Akhilesh]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Khandelwal]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
Title do not match,
expected [Title] but found [Title1],
Text do not match,
expected [Text] but found [Text1],
Booking ID do not match and its a criticle failure]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
Title do not match,
expected [Title] but found [Title1],
Text do not match,
expected [Text] but found [Text1],
Booking ID do not match and its a criticle failure
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:47)
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:31)
at testbase.TestBase.hardFailure(TestBase.java:67)
at suiteA.TestAA.testAA(TestAA.java:37)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1249)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAA -->
        <test-method status="PASS" signature="quite()[pri:0, instance:suiteA.TestAA@c46bcd4]" name="quite" is-config="true" duration-ms="10" started-at="2021-02-28T17:48:11 IST" finished-at="2021-02-28T17:48:11 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quite -->
      </class> <!-- suiteA.TestAA -->
    </test> <!-- TestAA -->
  </suite> <!-- Suite A -->
</testng-results>
